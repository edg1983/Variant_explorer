setwd("~/Softwares/code-server2.1523-vsc1.38.1-linux-x86_64")
system("./code-server --enable-http --port 8080 --host http://129.67.46.148 --auth password")
system("./code-server --help")
system("./code-server --allow-http --port 8080 --host 129.67.46.148 --auth password")
load("~/shiny-server/Exomiser_BRC/results.RData")
sort(unique(results$INHERIT[results$SAMPLE=="004Int001"]))
len(results$rank[results$SAMPLE=="004Int001" & results$INHERIT=="AR"])
length(results$rank[results$SAMPLE=="004Int001" & results$INHERIT=="AR"])
setwd("~/shiny-server/Variant_explorer")
gene_file <- ("example_data/V2.021Jea001.var2reg.genes.tsv.gz")
genes_df <- read.table(gene_file, sep="\t", header=T, sep="\t", stringsAsFactors = F)
genes_df <- read.table(gene_file, sep="\t", header=T, stringsAsFactors = F)
GDI <- read.table("~/Servers/well/gel/HICF2/ref/GDI/GDI_full_10282015.txt", header=T, sep="\t", stringsAsFactors = F)
genes_df <- merge(genes_df, GDI[,c("Gene","GDI.Phred")], by="Gene")
colnames(genes_df)[9] <- "GDI_phred"
write.table(genes_df, file = "example_data/V2.021Jea001.var2reg.genes.tsv", sep="\t", row.names=F, quote=F)
shiny::runApp()
runApp()
vars_file <- gzfile("example_data/V2.021Jea001.var2reg.vars.tsv.gz")
vars <- read.table(vars_file, header=T, sep="\t", stringsAsFactors = F)
file <- gzfile("example_data/V2.021Jea001.var2reg.segregation.tsv.gz")
segregation <- read.table(file, sep="\t", header=T, stringsAsFactors = F)
file <- gzfile("example_data/V2.021Jea001.var2reg.comphet.tsv.gz")
comphet <- read.table(file, sep="\t", header=T, stringsAsFactors = F)
segregating_vars_list <- segregation$ID[segregations$comphet == 2]
segregating_vars_list <- segregation$ID[segregation$comphet == 2]
comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2)
comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
as.character(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID))
as.vector(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID))
c(segregating_vars_list, comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID))
c(segregating_vars_list, unlist(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)))
str(c(segregating_vars_list, unlist(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID))))
str(unlist(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)))
str(as.numeric(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)))
str(comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID))
comphet_single_vars <- comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
comphet_single_vars$VarID
runApp()
runApp()
segregating_vars_list <- segregation$ID[segregation$comphet == 2]
segregating_vars_list <- segregation$ID[segregation$comphet >= 2]
comphet_single_vars <- comphet_df %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
comphet_single_vars <- comphet %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
segregating_vars_list <- unique(c(segregating_vars_list, comphet_single_vars$VarID))
segregating_vars_list
tail(segregating_vars_list)
vars_df <- as.data.frame(vars %>% mutate(Class = ifelse(
ID %in% segregating_vars_list &
d_score >= 0 &
Consequence %in% c("missense_variant") &
MaxPopAF <= 0.05 &
cohortAF <= 1 &
((Reg_type == "splicing" & SpliceAI_SpliceAI_max >= 0) | Reg_type != "splicing"),"PASS","FILTER")))
vars_df[vars_df$Gene == "PLPPR5",]
filtered_vars_list <- vars_df$ID[vars_df$Class == "PASS"]
comphet_df <- as.data.frame(comphet %>% mutate(Class = ifelse(
var1 %in% filtered_vars_list &
var2 %in% filtered_vars_list &
ID %in% segregating_vars_df()$ID, "PASS", "FILTER")))
comphet_df <- as.data.frame(comphet %>% mutate(Class = ifelse(
var1 %in% filtered_vars_list &
var2 %in% filtered_vars_list &
ID %in% segregating_vars_list, "PASS", "FILTER")))
comphet_df[comphet_df$Gene == "PLPPR5",]
filtered_vars_list <- unique(c(
vars_df$ID[vars_df$Class == "PASS"],
comphet_df$ID[comphet_df$Class == "PASS"]))
genes_df2 <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 50 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
genes_df2 <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 50 &
pLI_gnomad >= 0, "PASS", "FILTER")))
genes_df2[genes_df2$Gene == "PLPPR5",]
comphet_df <- as.data.frame(comphet %>% group_by(Gene) %>% mutate(Variants=paste(ID, collapse=","), Variants_n=n()) %>% select(Gene,Variants,Variants_n) %>% distinct() %>% mutate(Inh_model="comphet"))
comphet_df[comphet_df$Gene == "PLPPR5",]
GADO <- read.table("~/Servers/well/gel/HICF2/HICF2_hg38_remap/data/GADO_HPO/021Jea001.txt", header=T, sep="\t", stringsAsFactors = F)
pLI <- read.table("~/Servers/well/gel/HICF2/HICF2_hg38_remap/annotations/annotest/var2reg/gene_anno/gene_anno.tsv.gz", header=T, sep="\t", stringsAsFactors = F)
comphet_df <- merge(comphet_df, GADO[,c("Hgnc","Zscore")], by.x="Gene", by.y="Hgnc", all.x=T)
comphet_df <- merge(comphet_df, GDI[,c("Hgnc","GDI.Phred")], by="Gene", all.x=T)
comphet_df <- merge(comphet_df, GDI[,c("Gene","GDI.Phred")], by="Gene", all.x=T)
comphet_df <- merge(comphet_df, pLI, by.x="Gene", by.y="gid",all.x=T)
file <- gzfile("example_data/V2.021Jea001.var2reg.genes.tsv.gz")
genes <- read.table(file, header=T, sep="\t", stringsAsFactors = F)
colnames(comphet_df) <- c("Gene","Variants","Variants_n","Inh_model","Gado_zscore","GDI_phred","pLI_exac","pLI_gnomAD")
comphet_df$Exomiser_GenePhenoScore <- NA
genes <- rbind(genes,comphet_df)
genes$Exomiser_GenePhenoScore <- NA
genes <- as.data.frame(distinct(genes))
write.table(genes,file="example_data/V2.021Jea001.var2reg.genes.tsv", sep="\t", row.names=F, quote=F)
runApp()
CaseCode <- "021Jea001"
data_dir <- "example_data"
variants_file <- gzfile(paste0(data_dir, "/", paste0("V2.",input$CaseCode,".var2reg.vars.tsv.gz")))
variants_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.vars.tsv.gz")))
genes_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.genes.tsv.gz")))
comphet_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.comphet.tsv.gz")))
segregation_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.segregation.tsv.gz")))
comphet_df <- read.table(comphet_file, header=T, sep="\t", stringsAsFactors=F)
comphet_df$Class <- "PASS"
segregation_df <- read.table(segregation_file, header=T, sep="\t", stringsAsFactors=F)
variants_df <- read.table(variants_file, header=T, sep="\t", stringsAsFactors = F)
variants_df$MaxPopAF[is.na(RV$variants_df$MaxPopAF)] <- 0
variants_df$MaxPopAF[is.na(variants_df$MaxPopAF)] <- 0
variants_df$cohortAF[is.na(variants_df$cohortAF)] <- 0
variants_df$SpliceAI_SpliceAI_max[is.na(variants_df$SpliceAI_SpliceAI_max)] <- 0
variants_df$Class <- "PASS"
genes_df <- read.table(genes_file, header=T, sep="\t", stringsAsFactors = F)
genes_df <- as.data.frame(genes_df %>% separate_rows(Variants))
genes_df$GDI_phred[is.na(genes_df$GDI_phred)] <- max(genes_df$GDI_phred, na.rm = T)
genes_df$pLI_gnomAD[is.na(genes_df$pLI_gnomAD)] <- 0
genes_df$Class <- "PASS"
genes_df <- as.data.frame(genes_df %>% filter(Inh_model != "other"))
variants_df <- as.data.frame(variants_df %>% filter(ID %in% genes_df$Variants))
variants_df[variants_df$Gene == "PLPPR5",]
genes_scores <- as.data.frame(genes_df %>% select(Gene,Gado_zscore,Exomiser_GenePhenoScore,GDI_phred,pLI_gnomAD,Class) %>% distinct() %>% arrange(desc(Gado_zscore)))
segregating_vars_df <- as.data.frame(segregation_df %>% filter(
recessive >= 2 |
dominant >= 3 |
deNovo >= 3 |
comphet >= 2) )
segregating_vars_list <- segregating_vars_df$ID
comphet_single_vars <- comphet_df %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
segregating_vars_list <- unique(c(segregating_vars_list, comphet_single_vars$VarID))
variants_df <- as.data.frame(RV$variants_df %>% mutate(Class = ifelse(
ID %in% segregating_vars_list &
d_score >= 0 &
Consequence %in% c("missense_variant") &
MaxPopAF <= 1 &
cohortAF <= 1 &
((Reg_type == "splicing" & SpliceAI_SpliceAI_max >= 0) | Reg_type != "splicing"),"PASS","FILTER")))
variants_df <- as.data.frame(variants_df %>% mutate(Class = ifelse(
ID %in% segregating_vars_list &
d_score >= 0 &
Consequence %in% c("missense_variant") &
MaxPopAF <= 1 &
cohortAF <= 1 &
((Reg_type == "splicing" & SpliceAI_SpliceAI_max >= 0) | Reg_type != "splicing"),"PASS","FILTER")))
filtered_vars_list <- variants_df$ID[variants_df$Class == "PASS"]
comphet_df <- as.data.frame(comphet_df %>% mutate(Class = ifelse(
var1 %in% filtered_vars_list &
var2 %in% filtered_vars_list &
ID %in% segregating_vars_df$ID, "PASS", "FILTER")))
filtered_vars_list <- unique(c(
variants_df$ID[variants_df()$Class == "PASS"],
comphet_df$ID[comphet_df()$Class == "PASS"]))
filtered_vars_list <- unique(c(
variants_df$ID[variants_df$Class == "PASS"],
comphet_df$ID[comphet_df$Class == "PASS"]))
genes_df <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 50 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
filtered_genes_list <- unique(genes_df$Gene[genes_df$Class == "PASS"])
genes_scores <- as.data.frame(genes_scores %>% mutate(Class = ifelse(
Gene %in% filtered_genes_list, "PASS", "FILTER")))
genes_scores[genes_scores$Gene == "PLPPR5",]
genes_df[genes_df$Gene == "PLPPR5",]
variants_df[variants_df$Gene == "PLPPR5",]
comphet_df[comphet_df$Gene == "PLPPR5",]
grep("comphet_2916", filtered_vars_list)
genes_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.genes.tsv.gz")))
genes_df <- read.table(genes_file, header=T, sep="\t", stringsAsFactors = F)
genes_df[genes_df$Gene == "PLPPR5",]
genes_df <- as.data.frame(genes_df %>% separate_rows(Variants))
genes_df[genes_df$Gene == "PLPPR5",]
genes_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.genes.tsv.gz")))
genes_df <- read.table(genes_file, header=T, sep="\t", stringsAsFactors = F)
genes_df <- as.data.frame(genes_df %>% separate_rows(Variants, sep=","))
genes_df[genes_df$Gene == "PLPPR5",]
genes_df <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 50 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
genes_df[genes_df$Gene == "PLPPR5",]
genes_df$GDI_phred[is.na(genes_df$GDI_phred)] <- max(genes_df$GDI_phred, na.rm = T)
genes_df$pLI_gnomAD[is.na(genes_df$pLI_gnomAD)] <- 0
genes_df$Class <- "PASS"
genes_df <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 50 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
genes_df[genes_df$Gene == "PLPPR5",]
`%nin%` = Negate(`%in%`)
runApp()
filtered_genes_list <- unique(genes_df$Gene[genes_df$Class == "PASS"])
genes_scores <-  as.data.frame(genes_scores %>% mutate(Class = ifelse(
Gene %in% filtered_genes_list, "PASS", "FILTER")))
genes_scores[genes_scores$Gene == "PLPPR5",]
runApp()
input$CaseCode <- "021Jea001"
CaseCode <- "021Jea001"
data_dir <- "example_data"
variants_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.vars.tsv.gz")))
genes_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.genes.tsv.gz")))
comphet_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.comphet.tsv.gz")))
segregation_file <- gzfile(paste0(data_dir, "/", paste0("V2.",CaseCode,".var2reg.segregation.tsv.gz")))
comphet_df <- read.table(comphet_file, header=T, sep="\t", stringsAsFactors=F)
comphet_df$Class <- "PASS"
segregation_df <- read.table(segregation_file, header=T, sep="\t", stringsAsFactors=F)
variants_df <- read.table(variants_file, header=T, sep="\t", stringsAsFactors = F)
variants_df$MaxPopAF[is.na(variants_df$MaxPopAF)] <- 0
variants_df$cohortAF[is.na(variants_df$cohortAF)] <- 0
variants_df$SpliceAI_SpliceAI_max[is.na(variants_df$SpliceAI_SpliceAI_max)] <- 0
variants_df$Class <- "PASS"
genes_df <- read.table(genes_file, header=T, sep="\t", stringsAsFactors = F)
genes_df <- as.data.frame(genes_df %>% separate_rows(Variants, sep=","))
genes_df$GDI_phred[is.na(genes_df$GDI_phred)] <- max(genes_df$GDI_phred, na.rm = T)
genes_df$pLI_gnomAD[is.na(genes_df$pLI_gnomAD)] <- 0
genes_df$Class <- "PASS"
genes_scores <- as.data.frame(genes_df %>% select(Gene,Gado_zscore,Exomiser_GenePhenoScore,GDI_phred,pLI_gnomAD,Class) %>% distinct() %>% arrange(desc(Gado_zscore)))
load("Peds_and_HPOs.RData")
total_affected <- sum(all_peds[CaseCode]$affected)
values_segregation <- c(total_affected+1,seq(1:total_affected))
names(values_segregation) <- c("NOT_ACCEPTED", seq(1:total_affected))
values_segregation
segregating_vars_df <- as.data.frame(RV$segregation_df %>% filter(
recessive >= 2 |
dominant >= 3 |
deNovo >= 3 |
comphet >= 2) )
segregating_vars_df <- as.data.frame(segregation_df %>% filter(
recessive >= 2 |
dominant >= 3 |
deNovo >= 3 |
comphet >= 2) )
segregating_vars_list <- segregating_vars_df$ID
comphet_single_vars <- comphet_df %>% filter(ID %in% segregating_vars_list) %>% gather(key="Variant",value="VarID",var1:var2) %>% select(VarID)
segregating_vars_list <- unique(c(segregating_vars_list, comphet_single_vars$VarID))
variants_df <- as.data.frame(RV$variants_df %>% mutate(Class = ifelse(
ID %in% segregating_vars_list &
d_score >= 0 &
Consequence %in% c("missense_variant") &
MaxPopAF <= 0.01 &
cohortAF <= 1 &
((Reg_type == "splicing" & SpliceAI_SpliceAI_max >= 0) | Reg_type != "splicing"),"PASS","FILTER")))
variants_df <- as.data.frame(variants_df %>% mutate(Class = ifelse(
ID %in% segregating_vars_list &
d_score >= 0 &
Consequence %in% c("missense_variant") &
MaxPopAF <= 0.01 &
cohortAF <= 1 &
((Reg_type == "splicing" & SpliceAI_SpliceAI_max >= 0) | Reg_type != "splicing"),"PASS","FILTER")))
variants_df[variants_df$Gene == "PLPPR5",]
filtered_vars_list <- variants_df$ID[variants_df$Class == "PASS"]
comphet_df <- as.data.frame(comphet_df %>% mutate(Class = ifelse(
var1 %in% filtered_vars_list &
var2 %in% filtered_vars_list &
ID %in% segregating_vars_df$ID, "PASS", "FILTER")))
comphet_df[comphet_df$Gene=="PLPPR5",]
filtered_vars_list <- unique(c(
variants_df$ID[variants_df$Class == "PASS"],
comphet_df$ID[comphet_df$Class == "PASS"]))
genes_df <- as.data.frame(RV$genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 40 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
genes_df <- as.data.frame(genes_df %>% mutate(Class = ifelse(
Variants %in% filtered_vars_list &
GDI_phred <= 40 &
pLI_gnomAD >= 0, "PASS", "FILTER")))
genes_df[genes_df$Gene == "PLPPR5",]
filtered_genes_list <- unique(genes_df$Gene[genes_df()$Class == "PASS"])
filtered_genes_list <- unique(genes_df$Gene[genes_df$Class == "PASS"])
genes_scores <- as.data.frame(genes_scores %>% mutate(Class = ifelse(
Gene %in% filtered_genes_list, "PASS", "FILTER")))
genes_scores[genes_scores$Gene == "PLPPR5",]
as.data.frame(genes_scores %>% filter(Class == "PASS") %>% select(-Class))
runApp()
runApp()
genes_df()[1:5,]
runApp()
