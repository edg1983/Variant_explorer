}
for (n in names(outdata)) {
if (!is.null(outdata[[n]])) {
outdata[[n]] <- as.data.frame(outdata[[n]], stringsAsFactors=F)
colnames(outdata[[n]]) <- headers[[n]]
outdata[[n]] <- as.data.frame(outdata[[n]] %>% mutate_if(checkNumbers,as.numeric))
}
}
if (fileID != FALSE) {
for (n in names(outdata)) {
if (!is.null(outdata[[n]])) {outdata[[n]]$dataset <- fileID}
}
}
close(con)
return(outdata)
}
readData <- function(input_file, sep="\t", header=FALSE, fileID=FALSE) {
df <- read.table(input_file, sep=sep, header=header, stringsAsFactors = F)
if (fileID != FALSE) {
df$dataset <- fileID
}
return(df)
}
project_data <- readData("project_data.txt")
vcf_stats <- list()
vars_per_contig <- NULL
for (i in 1:nrow(project_data)) {
message("### DATASET ", project_data[i,1])
message("Processing VCF stats")
vcf_stats[[project_data[i,1]]] <- readVCFstat(project_data[i,2], sep="\t", fileID=project_data[i,1])
message("Processing vars per contig")
vars_per_contig <- rbind(vars_per_contig, readData(project_data[i,3],fileID=project_data[i,1]))
}
colnames(vars_per_contig) <- c("chrom","length","n_vars","dataset")
#vars_per_contig$length[50:71] <- vars_per_contig$length[1:22]
#vars_per_contig$length[73:74] <- vars_per_contig$length[23:24]
#vars_per_contig$length[72] <- vars_per_contig$length[25]
vars_per_contig <- convertNumericCols(vars_per_contig)
vars_per_contig$norm_count <- vars_per_contig$n_vars / (vars_per_contig$length / 1000000)
vars_per_contig$chrom <- factor(vars_per_contig$chrom, levels = chr_order)
save(vcf_stats, vars_per_contig, file = "VCF_stats.RData")
d<- "platypus"
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
View(plot_df)
ggplot(plot_df, aes(x=quality, y=n_SNPs)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line()
d<- "deepvariant"
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
d<- "deepvari"
d<- "deepvar"
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line()
d<-"gatk"
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
d<-"gatk_vqsr99.5"
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_line()
ggplot(plot_df, aes(x=n_SNPs, y=pct_SNPs)) + geom_line()
ggplot(plot_df, aes(x=n_SNPs, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=n_SNPs, y=ts_tv)) + geom_point()
ggplot(plot_df, aes(x=cumsum_SNPs, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=cums_SNPs, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=cum_SNPs, y=ts_tv)) + geom_line()
summary(vcf_stats[[d]]$QUAL$quality)
ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line()
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
ggplot(plot_df, aes(x=cum_SNPs, y=ts_tv)) + geom_line()
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
ggplot(plot_df, aes(x=cum_SNPs, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_line()
ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_line()
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line() + labs(x="QUAL",y="Ts/Tv (sites with QUAL \u2265 X)")
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line() +
labs(x="QUAL",y="Ts/Tv (sites with QUAL \u2265 X)") +
plot_format1 + geom_hline(yintercept = c(2,2.1), linetype="dashed")
ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line() +
geom_hline(yintercept = c(2,2.1), linetype="dashed") +
labs(x="QUAL",y="Ts/Tv (sites with QUAL \u2265 X)") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_line()
ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_line() +
labs(x="QUAL",y="% indels (sites with QUAL \u2265 X)") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_line()  +
labs(x="QUAL",y="% SNPs (sites with QUAL \u2265 X)") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
ggplot(plot_df, aes(x=cum_SNPs, y=ts_tv)) + geom_line()
ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio") +
plot_format1
ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio") +
scale_x_continuous(breaks = seq(min(plot_df$cum_SNPs),max(plot_df$cum_SNPs),1000000)) +
plot_format1
ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio") +
scale_x_continuous(breaks = seq(min(plot_df$cum_SNPs/1000000),max(plot_df$cum_SNPs/1000000),1)) +
plot_format1
ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio") +
scale_x_continuous(breaks = round(seq(min(plot_df$cum_SNPs/1000000),max(plot_df$cum_SNPs/1000000),1),1) +
plot_format1
)
ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio") +
scale_x_continuous(breaks = round(seq(min(plot_df$cum_SNPs/1000000),max(plot_df$cum_SNPs/1000000),1),1)) +
plot_format1
panel1 <- ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_line()  +
labs(x="QUAL",y="% SNPs (sites with QUAL \u2265 X)", title="%SNP by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel2 <- ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_line() +
labs(x="QUAL",y="% indels (sites with QUAL \u2265 X)", title="%indels by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel3 <- ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line() +
geom_hline(yintercept = c(2,2.1), linetype="dashed") +
labs(x="QUAL",y="Ts/Tv (sites with QUAL \u2265 X)",title="Ts/Tv by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel4 <- ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (ordered by decreasing QUAL)",y="Ts/Tv ratio",title="Ts/Tv vs N SNPs") +
scale_x_continuous(breaks = round(seq(min(plot_df$cum_SNPs/1000000),max(plot_df$cum_SNPs/1000000),1),1)) +
plot_format1
grid.arrange(panel1, panel2, panel3, panel4, ncol=1)
grid.arrange(panel1, panel2, panel3, panel4, ncol=2)
grid.arrange(panel1, panel2, panel3, panel4, nrow=2)
grid.arrange(panel1, panel3, panel2, panel4, ncol=2)
ggplot(plot_df, aes(x=quality,y=n_SNPs)) + geom_bar()
ggplot(plot_df, aes(x=quality,y=n_SNPs)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=quality,y=n_SNPs)) + geom_bar(stat="identity") + scale_y_sqrt()
ggplot(plot_df, aes(x=n_SNPs)) + geom_histogram() + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram() + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram() + scale_y_sqrt(bins=100)
ggplot(plot_df, aes(x=quality)) + geom_histogram(bins=100) + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram(bins=10) + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram(bins=50) + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram(bins=1000) + scale_y_sqrt()
ggplot(plot_df, aes(x=quality)) + geom_histogram(bins=200) + scale_y_sqrt()
ggplot(plot_df, aes(x=quality,y=n_SNPs)) + geom_bar(stat="identity") + scale_y_sqrt()
qual_bin <- plot_df %>% group_by(G=trunc((2:n())/10)) %>% summarize(mean_qual=mean(quality), count_SNPs=sum(n_SNPs))
qual_bin <- plot_df %>% group_by(G=trunc(0:(n()-1)/10)) %>% summarize(mean_qual=mean(quality), count_SNPs=sum(n_SNPs))
ggplot(qual_bin, aes(x=mean_qual,y=count_SNPs)) + geom_bar(stat="identity") + scale_y_sqrt()
qual_bin <- plot_df %>% group_by(G=trunc(0:(n()-1)/20)) %>% summarize(mean_qual=mean(quality), count_SNPs=sum(n_SNPs))
ggplot(qual_bin, aes(x=mean_qual,y=count_SNPs)) + geom_bar(stat="identity") + scale_y_sqrt()
ggplot(plot_df, aes(x=quality,y=n_SNPs)) + geom_line() + scale_y_sqrt()
myplot <- arrangeGrob(panel1, panel3, panel2, panel4, ncol=2)
ggsave(myplot, file="QUAL_panel.png", height=8, width=8, dpi=150)
output_dir <- "VCF_plots"
head(vcf_stats[[d]]$DP)
d <- "deepvar"
for (d in vcf_stats) {
plot_df <- vcf_stats[[d]]$QUAL
#plot_df <- plot_df %>% mutate(
#  ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT))
plot_df <- plot_df[order(plot_df$quality, decreasing = T),]
plot_df <- plot_df %>% mutate(
ts_tv = cumsum(n_transitions_1stALT) / cumsum(n_transversions_1stALT),
cum_SNPs = cumsum(n_SNPs),
cum_indels = cumsum(n_indels),
pct_SNPs = cum_SNPs / sum(n_SNPs),
pct_indels = cum_indels / sum(n_indels)
)
panel1 <- ggplot(plot_df, aes(x=quality, y=pct_SNPs)) + geom_line()  +
labs(x="QUAL",y="% SNPs (sites with QUAL \u2265 X)", title="%SNP by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel2 <- ggplot(plot_df, aes(x=quality, y=pct_indels)) + geom_line() +
labs(x="QUAL",y="% indels (sites with QUAL \u2265 X)", title="%indels by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel3 <- ggplot(plot_df, aes(x=quality, y=ts_tv)) + geom_line() +
geom_hline(yintercept = c(2,2.1), linetype="dashed") +
labs(x="QUAL",y="Ts/Tv (sites with QUAL \u2265 X)",title="Ts/Tv by QUAL") +
scale_x_continuous(breaks = seq(0,1000,100)) +
plot_format1
panel4 <- ggplot(plot_df, aes(x=cum_SNPs/1000000, y=ts_tv)) + geom_line() +
labs(x="million SNPs (decreasing QUAL)",y="Ts/Tv ratio",title="Ts/Tv vs N SNPs") +
scale_x_continuous(breaks = round(seq(min(plot_df$cum_SNPs/1000000),max(plot_df$cum_SNPs/1000000),1),1)) +
plot_format1
myplot <- arrangeGrob(panel1, panel3, panel2, panel4, ncol=2)
ggsave(myplot, file=paste0(output_dir, "/", d, "_QUAL_panel.png"), height=8, width=8, dpi=150)
}
head(vcf_stats[[d]]$DP)
head(vcf_stats$deepvar$DP)
ggplot(vcf_stats$deepvar$DP, aes(x=bin, y=pct_genotypes)) + geom_line()
summary(vcf_stats$deepvar$DP$bin)
tail(vcf_stats$deepvar$DP)
plot_df <- makePlotDF(vcf_stats, "DP")
head(plot_df)
plot_df$bin <- as.numeric(plot_df$bin)
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line()
plot_df[plot_df$bin == 0,]
plot_df$cumsum <- cumsum(plot_df$pct_genotypes)
ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line()
plot_df <- makePlotDF(vcf_stats, "DP")
plot_df %>% group_by(dataset) %>% mutate(cumsum=cumsum(pct_genotypes))
plot_df <- plot_df %>% group_by(dataset) %>% mutate(cumsum=cumsum(pct_genotypes))
ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line()
plot_df <- makePlotDF(vcf_stats, "DP")
plot_df$bin <- as.numeric(plot_df$bin)
plot_df <- plot_df %>% group_by(dataset) %>% mutate(cumsum=cumsum(pct_genotypes))
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=(seq(min(plot_df(pct_genotypes)),max(plot_df(pct_genotypes)),1))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=(seq(min(plot_df$pct_genotypes),max(plot_df$pct_genotypes),1))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round((seq(min(plot_df$pct_genotypes),max(plot_df$pct_genotypes),1)))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round((seq(min(plot_df$pct_genotypes),max(plot_df$pct_genotypes),1)),2)) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round(seq(0,1,0.1))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="cumulative % genotypes") +
plot_format1
ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round(seq(0,100,10))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="cumulative % genotypes") +
plot_format1
outFilename <- function(prefix, suffix, ext, output_dir=output_dir) {
filename <- paste0(output_dir, "/", prefix, "_", suffix, ".", ext)
return(filename)
}
panel1 <- ggplot(plot_df, aes(x=bin, y=pct_genotypes, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round((seq(min(plot_df$pct_genotypes),max(plot_df$pct_genotypes),1)),2)) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="% genotypes") +
plot_format1
panel2 <- ggplot(plot_df, aes(x=bin, y=cumsum, color=dataset)) + geom_line() +
scale_x_continuous(limits=c(0,100), breaks=(seq(0,100,10))) +
scale_y_continuous(breaks=round(seq(0,100,10))) +
scale_color_brewer(palette = "Set1") +
labs(x="Depth",y="cumulative % genotypes") +
plot_format1
myplot <- arrangeGrob(panel1,panel2,nrow=2)
ggsave(myplot, file=outFilename(d,"DP_panel","png"), device="png", height=10, width=6, dpi=150)
outFilename <- function(prefix, suffix, ext, output_path=output_dir) {
filename <- paste0(output_path, "/", prefix, "_", suffix, ".", ext)
return(filename)
}
ggsave(myplot, file=outFilename(d,"DP_panel","png"), device="png", height=10, width=6, dpi=150)
outFilename(d,"DP_panel","png")
d
ggsave(myplot, file=outFilename("","DP_panel","png"), device="png", height=10, width=6, dpi=150)
ggsave(myplot, file=outFilename("","DP_panel","png"), device="png", height=9, width=6, dpi=150)
plot_df <- makePlotDF(vcf_stats, "AF")
head(plot_df)
plot_df <- plot_df %>% group_by(dataset) %>% mutate(cumsum_snp=cumsum(n_SNPs), cumsum_indel=cumsum(n_indels))
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_line(])
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_line()
plot_df <- makePlotDF(vcf_stats, "AF")
plot_df <- plot_df[order(plot_df$Allele_freq, decreasing=T),]
plot_df <- plot_df %>% group_by(dataset) %>% mutate(cumsum_snp=cumsum(n_SNPs), cumsum_indel=cumsum(n_indels))
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_line()
plot_df <- makePlotDF(vcf_stats, "AF")
plot_df <- plot_df %>% group_by(dataset) %>% mutate(cumsum_snp=cumsum(n_SNPs), cumsum_indel=cumsum(n_indels))
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, fill=dataset)) + geom_bar(stat="identity")
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, fill=dataset)) + geom_histogram(stat="identity")
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp)) + geom_histogram(stat="identity")
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity")
head(plot_df)
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") + scale_y_sqrt()
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_histogram(stat="identity") + scale_y_sqrt()
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs/1000000, fill=dataset)) + geom_bar(stat="identity") + scale_y_sqrt()
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs/1000000, fill=dataset)) + geom_bar(stat="identity", bins=100) + scale_y_sqrt()
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs/1000000, fill=dataset)) + geom_bar(stat="identity", bins=100) + scale_y_sqrt()
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs/1000000, fill=dataset)) + geom_bar(stat="identity", bins=100) + scale_y_log10()
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity", bins=100) + scale_y_log10()
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity", position=position_dodge(0.9)) + scale_y_log10()
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") + scale_y_log10() + facet_wrap(~dataset)
ggplot(plot_df[plot_df$Allele_freq > 0,], aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") + scale_y_log10() + facet_wrap(~dataset) + plot_format1
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") + scale_y_log10() + facet_wrap(~dataset) + plot_format1
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N SNPs (log10)")
plot_format1
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N SNPs (log10)") +
plot_format1
ggplot(plot_df, aes(x=Allele_freq, y=n_indels, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N indels (log10)") +
plot_format1
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp/1000000, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=Allele_freq, y=cumsum_indel/1000000, color=dataset)) + geom_line() +
labs(x="dataset AF", y="million INDELs") +
plot_format1
panel1 <- ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N SNPs (log10)") +
plot_format1
panel2 <- ggplot(plot_df, aes(x=Allele_freq, y=n_indels, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N indels (log10)") +
plot_format1
myplot <- arrangeGrob(panel1, panel2, nrow=2)
ggsave(myplot, filename = outFilename("","AF_distribution","png"), width=6, height=8, dpi=150)
ggsave(myplot, filename = outFilename("","AF_distribution","png"), width=8, height=8, dpi=150)
ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N SNPs (log10)", title="SNPs AF distribution") +
plot_format1
panel1 <- ggplot(plot_df, aes(x=Allele_freq, y=n_SNPs, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset) +
labs(x="dataset AF", y="N SNPs (log10)", title="SNPs AF distribution") +
plot_format1
panel2 <- ggplot(plot_df, aes(x=Allele_freq, y=n_indels, fill=dataset)) + geom_bar(stat="identity") +
scale_y_log10() + facet_wrap(~dataset, ) +
labs(x="dataset AF", y="N indels (log10)", title="INDELs AF distribution") +
plot_format1
myplot <- arrangeGrob(panel1, panel2, nrow=2)
ggsave(myplot, filename = outFilename("","AF_distribution","png"), width=8, height=8, dpi=150)
panel1 <- ggplot(plot_df, aes(x=Allele_freq, y=cumsum_snp/1000000, color=dataset)) + geom_line() +
labs(x="dataset AF", y="million SNPs") +
plot_format1
panel2 <- ggplot(plot_df, aes(x=Allele_freq, y=cumsum_indel/1000000, color=dataset)) + geom_line() +
labs(x="dataset AF", y="million INDELs") +
plot_format1
myplot <- arrangeGrob(panel1, panel2, nrow=2)
ggsave(myplot, filename = outFilename("","AF_cumsum","png"), width=8, height=8, dpi=150)
ggsave(myplot, filename = outFilename("","AF_cumsum","png"), width=6, height=8, dpi=150)
outFilename <- function(name, ext, prefix=NULL, output_path=output_dir) {
if (!is.null(prefix)) {
basename=paste0(prefix, "_", suffix)
} else {
basename=name
}
filename <- paste0(output_path, "/", basename, ".", ext)
return(filename)
}
plot_df <- makePlotDF(vcf_stats, "HWE")
head(plot_df)
ggplot(plot_df, aes(x=1st_ALT_AF, y=median, ymin=25th_percentile, ymax=75th_precentile)) + geom_line()
ggplot(plot_df, aes(x=1st_ALT_AF, y=median, ymin=`25th_percentile`, ymax=`75th_precentile`)) + geom_line()
ggplot(plot_df, aes(x=`1st_ALT_AF`, y=median, ymin=`25th_percentile`, ymax=`75th_precentile`)) + geom_line()
colnames(plot_df)
colnames(plto_df) <- c("HWE","id","AF","n_obs","perc_25","median","perf_75","dataset")
colnames(plot_df) <- c("HWE","id","AF","n_obs","perc_25","median","perf_75","dataset")
ggplot(plot_df, aes(x=AF, y=median, ymin=perc_25, ymax=perc_75)) + geom_line()
ggplot(plot_df, aes(x=AF, y=median)) + geom_line()
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_line()
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth()
colnames(plot_df) <- c("HWE","id","AF","n_obs","perc_25","median","perc_75","dataset")
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(stat="identity", aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(stat="lm", aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(stat="identity", aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_line(aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(aes(ymin=perc_25, ymax=perc_75))
View(plot_df)
ggplot(plot_df, aes(x=AF, y=median, color=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75))
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75))
(0.04^2 + 0.96^2) / 2
(0.04^2 + 0.96^2)
(0.04 * 0.96) / 2
(0.04 * 0.96) * 2
plot_df$HWE <- (plot_df$AF * (1-plot_df$AF)) * 2
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE, color="black")) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE), linetype="dashed") + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE), linetype="dashed") + lims(y=c(0,0.75) + facet_wrap(~dataset)
)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE), linetype="dashed") + lims(y=c(0,0.75)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) + geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) + geom_line(aes(x=AF, y=HWE), linetype="dashed") + lims(y=c(0,0.6)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) +
geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) +
geom_line(aes(x=AF, y=HWE), linetype="dashed", size=2) +
lims(y=c(0,0.6)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) +
geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) +
geom_line(aes(x=AF, y=HWE), linetype="smalldashed", size=2) +
lims(y=c(0,0.6)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) +
geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) +
geom_line(aes(x=AF, y=HWE), linetype="dashed", size=1.5) +
lims(y=c(0,0.6)) + facet_wrap(~dataset)
ggplot(plot_df, aes(x=AF, y=median, color=dataset, fill=dataset)) +
geom_smooth(stat="identity",aes(ymin=perc_25, ymax=perc_75)) +
geom_line(aes(x=AF, y=HWE), linetype="dashed", size=1) +
lims(y=c(0,0.6)) + facet_wrap(~dataset)
shiny::runApp('github.com/Variant_explorer')
runApp('github.com/Variant_explorer')
library(shiny)
PanelApp_index <- read.delim("~/github.com/Variant_explorer/Resources/PanelApp_index.tsv", stringsAsFactors=FALSE)
View(PanelApp_index)
decrypt_datafile = function(inf, pwd) {
#pwd = .rs.askForPassword("Enter password") # asks for pwd in RStudio
k = cyphr::key_sodium(sodium::hash(charToRaw(pwd)))
d = tryCatch({
cyphr::decrypt(readRDS(inf), k)
}, error=function(cond) {
#RV$decrypt_status = "Could not decrypt! pwd wrong?"
#if (file.exists(outf)) { file.remove(outf) }
return(0)
})
return (d)
}
setwd("~/github.com/Variant_explorer")
mydata <- decrypt_datafile("encrypted_data/008Con001.RData.enc", "HICF2_hg38_newdata")
mydata$pedigree
shiny::runApp()
runApp()
runApp()
